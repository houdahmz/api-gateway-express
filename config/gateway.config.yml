http:
  port: ${HTTP_PORT:-8080}

admin: 
  port: ${HTTP_PORT_ADMIN:-9876}
  host: localhost 

apiEndpoints:
  # profile:
  #   - host: localhost
  #     paths: /user-management/profile
  #     methods: ["GET"]
  #     scopes: ['admin']

  #   - host: localhost
  #     paths: /user-management/profile*
  #     methods: ["POST","DELETE"]
  #     scopes: ['admin']

  #   - host: localhost
  #     paths: /user-management/profile/agent
  #     methods: ["GET"]
  #     scopes: ['admin']

  #   - host: localhost
  #     paths: /user-management/image*
  #     scopes: ['admin']

  #   - host: localhost
  #     paths: /user-management/activity*
  #     scopes: ['admin']

  #   - host: localhost
  #     paths: /user-management/type-user*
  #     scopes: ['admin']

  #   - host: localhost
  #     paths: /user-management/category*
  #     scopes: ['admin']

  #   - host: localhost
  #     paths: /user-management/document*

  #   - host: localhost
  #     paths: /user-management/company*
  #     scopes: ['admin']

  #   - host: localhost
  #     paths: /user-management/activity-company*
  #     scopes: ['admin']

  #   - host: localhost
  #     paths: /user-management/profile
  #     scopes: ['admin']

  #   - host: localhost
  #     paths: /user-management/profile/agent
  #     methods: ["POST"]
  #     scopes: ['admin']

  topup:
    host: localhost
    paths: /api/facial
    methods:
      - POST
      
  profile:
    - host: localhost
      paths: /user-management/profile/
      methods: ["GET"]
      scopes: ['admin']

    - host: localhost
      paths: /user-management/profile/
      methods: ["POST"]
      scopes: ['admin']

    - host: localhost
      paths: /user-management/profile/by_userId/:id
      methods: ["GET"]
      scopes: ['admin']

    - host: localhost
      paths: /user-management/company/:id
      methods: ["PATCH"]
      scopes: ['admin']

    - host: localhost
      paths: /user-management/company/profile-by-company
      methods: ["POST"]
      scopes: ['admin']

    - host: localhost
      paths: /user-management/profile/agent
      methods: ["POST"]
      scopes: ['admin']

    - host: localhost
      paths: /user-management/history/*
      methods: ["GET"]
      scopes: ['admin']

    - host: localhost
      paths: /user-management/type_user*
      methods: ["GET"]
      scopes: ['admin']

  voucher:
    - host: localhost
      paths: /voucher/
      methods: ["GET"]
      scopes: ['admin']

    - host: localhost
      paths: /voucher/facial*
      methods: ["POST"]
      scopes: ['admin']

    # - host: localhost
    #   paths: /voucher/voucher*
    #   methods: ["POST"]
    #   scopes: ['admin']

    - host: localhost
      paths: /voucher/operator*
      methods: ["POST"]
      scopes: ['admin']

    - host: localhost
      paths: /voucher/document
      methods: ["POST"]
      scopes: ['admin']

    - host: localhost
      paths: '/voucher/transaction'
      methods: ["GET"]
      scopes: ['admin']

    - host: localhost
      paths: '/voucher/transaction'
      methods: ["POST"]
      scopes: ['admin']

    - host: localhost
      paths: '/voucher/transaction/by_user/:id'
      methods: ["GET"]
      scopes: ['user']

    - host: localhost
      paths: '/voucher/transaction/status'
      methods: ["POST"]
      scopes: ['admin']

    - host: localhost
      paths: '/voucher/settings'
      methods: ["POST"]
      scopes: ['admin']

    # - host: localhost
    #   paths: /voucher/transaction/
    #   methods: ["GET"]
    #   scopes: ['admin']

  paymee:
    - host: localhost
      paths: /paymee/cashin
      methods: ["POST"]
      scopes: ['user']

    - host: localhost
      paths:  ['/paymee/accountname/:id']
      methods: ["GET"]
      scopes: ['user']

    - host: localhost
      paths: /paymee/transactions
      scopes: ['admin']
  
  poste:
    - host: localhost
      paths: /affiliation*
      methods: ["POST"]
      scopes: ['user']

    - host: localhost
      paths: /bill-payment*
      methods: ["POST"]
      scopes: ['user']

    - host: localhost
      paths: /recharge-card*
      methods: ["POST"]
      scopes: ['user']

    - host: localhost
      paths: /balance*
      methods: ["POST"]
      scopes: ['admin']

    - host: localhost
      paths: /unsubscribe*
      methods: ["POST"]
      scopes: ['user']

    - host: localhost
      paths: /affiliation*
      methods: ["GET"]
      scopes: ['admin']
    - host: localhost
      paths: /affiliation/user*
      methods: ["GET"]
      scopes: ['user']
    - host: localhost
      paths: /recharge-card*
      methods: ["GET"]
      scopes: ['admin']
    - host: localhost
      paths: /recharge-card/user*
      methods: ["GET"]
      scopes: ['user']
    - host: localhost
      paths: /bill-payment*
      methods: ["GET"]
      scopes: ['admin']  
    - host: localhost
      paths: /bill-payment/user*
      methods: ["GET"]
      scopes: ['user']  
    - host: localhost
      paths: /poste/transaction
      methods: ["GET"]
      scopes: ['admin'] 
  topnet:
    - host: localhost
      paths: /payment*
      methods: ["POST"]
      scopes: ['user']

    - host: localhost
      paths:  /topnet/transaction/user*
      methods: ["GET"]
      scopes: ['user']
    - host: localhost
      paths:  /topnet/transaction
      methods: ["GET"]
      scopes: ['admin']
    - host: localhost
      paths: /bill
      methods: ["GET"]
      scopes: ['user']
  
  agent-register:
    - host: localhost
      paths: /api/agent-register/profile/agent
      methods: ["POST"]
      scopes: ['agent']
  wallet:
    - host: localhost
      paths: /wallet/supplier-service
      methods: ["GET"]
      scopes: ['user']
    - host: localhost
      paths: /wallet/supplier-service*
      methods: ["GET"]
      scopes: ['user']   
    - host: localhost
      paths: /wallet/supplier-service*
      methods: ["PUT"]
      scopes: ['user']
    - host: localhost
      paths: /wallet/supplier-service/*
      methods: ["PATCH"]
      scopes: ['user'] 
    - host: localhost
      paths: /wallet/supplier-service/*
      methods: ["DELETE"]
      scopes: ['user']                       
    - host: localhost
      paths: /wallet/supplier-service
      methods: ["POST"]
      scopes: ['user']

  api:
    host: '*'
    paths: ['/users*','/scopes*','/credentials*','/apps*']
    methods: ["GET","POST","PUT","DELETE","PATCH",PUT]
    scopes: ['super_admin']

serviceEndpoints:
  api_management:
    url: http://localhost:${HTTP_PORT_API_MANAGEMENT:-3000}/api-management
  backend:
    url: http://localhost:${HTTP_PORT_ADMIN:-9876}

policies:
  - basic-auth
  - key-auth
  - log
  - proxy
  - oauth2
  - jwt
  - request-transformer
  - validate-user
  - jwt-permissions
  - jwtScopes
  - agent-register
  - rewrite
  - tokenReg
  - login
  - response-transformer

pipelines:
  # default:
  #   apiEndpoints:
  #     - profile
  #   policies:
  #     - log:
  #         - action:
  #             message: "profile eee header===> ${req.headers.authorization} ---${res.statusCode}-${req.method} ${req.originalUrl}  ${req.url}"
  #   # rewrite:
  #   #   -
  #   #     condition:
  #   #       name: pathmatch
  #   #       match: /:route*
  #   #     action:
  #   #       rewrite: /api_management/:route
  #     - log:
  #         - action:
  #             message: "eeerrr header===> ${req.headers.authorization} ---${res.statusCode}-${req.method} ${req.originalUrl}  ${req.url}"
  #     - oauth2:
  #         - action:
  #             jwt:
  #               issuer: express-gateway
  #               audience: something
  #               subject: 3pXQjeklS3cFf8OCJw9B22
  #               secretOrPublicKey: 54v3WJGBcFPh3TFgZSzovw
  #               checkCredentialExistence: false
  #     - validate-user:
  #     - request-transformer:
  #         action:
  #           body:
  #             add:
  #               user: req.user
  #     - log:
  #         - action:
  #             message: "aaaa ${res.statusCode}-${req.method} ${req.originalUrl}  ${req.url}"

  #     - proxy:
  #         - action:
  #             serviceEndpoint: api_management
  #             changeOrigin: true
  voucher:
    apiEndpoints:
      - voucher
    policies:
      - log:
          - action:
              message: "voucher header===> ${req.headers.authorization} ---${req.originalUrl}  ${req.url}"
      - oauth2:
          - action:
              jwt:
                issuer: express-gateway
                audience: something
                subject: 3pXQjeklS3cFf8OCJw9B22
                secretOrPublicKey: 54v3WJGBcFPh3TFgZSzovw
                checkCredentialExistence: false
      - validate-user:
      - request-transformer:
          action:
            body:
              add:
                user: req.user
      - log:
          - action:
              message: "${res.statusCode}-${req.method} ${req.originalUrl}  ${req.url}"
      - proxy:
          - action:
              serviceEndpoint: api_management
              changeOrigin: true

  profile:
    apiEndpoints:
      - profile
    policies:
      - log:
          - action:
              message: "aerteet header===> ${req.headers.authorization} ---${req}"
      - oauth2:
          - action:
              jwt:
                issuer: express-gateway
                audience: something
                subject: 3pXQjeklS3cFf8OCJw9B22
                secretOrPublicKey: 54v3WJGBcFPh3TFgZSzovw
                checkCredentialExistence: false
      - validate-user:
      - request-transformer:
          action:
            body:
              add:
                user: req.user
      - log:
          - action:
              message: "${res.statusCode}-${req.method} ${req.originalUrl}  ${req.url}"
      - proxy:
          - action:
              serviceEndpoint: api_management
              changeOrigin: true

  topup:
    apiEndpoints:
      - topup
    policies:
      - proxy:
          - action:
              serviceEndpoint: api_management
              changeOrigin: true

  paymee:
    apiEndpoints:
      - paymee
    policies:
      - log:
          - action:
              message: "paymee header===> ${req.headers.authorization} ---${req.originalUrl}  ${req.url}"
      - oauth2:
          - action:
              jwt:
                issuer: express-gateway
                audience: something
                subject: 3pXQjeklS3cFf8OCJw9B22
                secretOrPublicKey: 54v3WJGBcFPh3TFgZSzovw
                checkCredentialExistence: false
      - validate-user:
      - request-transformer:
          action:
            body:
              add:
                user: req.user
      - log:
          - action:
              message: "${res.statusCode}-${req.method} ${req.originalUrl}  ${req.url}"

      - proxy:
          - action:
              serviceEndpoint: api_management
              changeOrigin: true

  adminAPI:
    apiEndpoints:
      - api
    policies:
      - log:
          - action:
              message: "api admin header===> ${req.headers.authorization} ${req.originalUrl}  ${req.url}"
      - oauth2:
          - action:
              jwt:
                issuer: express-gateway
                audience: something
                subject: 3pXQjeklS3cFf8OCJw9B22
                secretOrPublicKey: 54v3WJGBcFPh3TFgZSzovw
                checkCredentialExistence: false
      - validate-user:
      - request-transformer:
          action:
            body:
              add:
                user: req.user
      - log:
          - action:
              message: "${res.statusCode}-${req.method} ${req.originalUrl}  ${req.url}"
      - proxy:
          - action:
              serviceEndpoint: backend
              changeOrigin: true

  poste:
    apiEndpoints:
      - poste
    policies:
      - log:
          - action:
              message: "header===> ${req.headers.authorization} ---${req}"
      - oauth2:
          - action:
              jwt:
                issuer: express-gateway
                audience: something
                subject: 3pXQjeklS3cFf8OCJw9B22
                secretOrPublicKey: 54v3WJGBcFPh3TFgZSzovw
                checkCredentialExistence: false
      - validate-user:
      - request-transformer:
          action:
            body:
              add:
                user: req.user
      - log:
          - action:
              message: "${res.statusCode}-${req.method} ${req.originalUrl}  ${req.url}"
      - proxy:
          - action:
              serviceEndpoint: api_management
              changeOrigin: true

  topnet:
    apiEndpoints:
      - topnet
    policies:
      - log:
          - action:
              message: "header===> ${req.headers.authorization} ---${req}"
      - oauth2:
          - action:
              jwt:
                issuer: express-gateway
                audience: something
                subject: 3pXQjeklS3cFf8OCJw9B22
                secretOrPublicKey: 54v3WJGBcFPh3TFgZSzovw
                checkCredentialExistence: false
      - validate-user:
      - request-transformer:
          action:
            body:
              add:
                user: req.user
      - log:
          - action:
              message: "${res.statusCode}-${req.method} ${req.originalUrl}  ${req.url}"
      - proxy:
          - action:
              serviceEndpoint: api_management
              changeOrigin: true


