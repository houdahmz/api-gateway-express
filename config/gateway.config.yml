http:
  port: 8080
admin:
  port: 9876
  host: localhost
apiEndpoints:
  
  # regist:
  #   host: localhost
  #   paths: /api/profile/agent
  #   methods:
  #     - PUT
  #     - POST
  #     - PATCH
  #     - DELETE
  #     - GET
  #   scopes:
  #     - 'admin'
  # get:
  #   host: localhost
  #   paths: /api/profile/test
    # Only users with the 'admin' scope will be able to access
    # this endpoint
    # scopes:
    #   - 'admin'

  profile:
    - host: localhost
      paths: ['/api/profile/agent']
      methods: ["POST"]
      scopes:
        - 'admin'

    - host: localhost
      paths: ['/api/profile', '/api/profile/:id']
      methods: ["GET"]

    - host: localhost
      paths: ['/api/profile', '/api/profile/:id']
      methods: ["PATCH", "PUT", "POST", "DELETE"]

    - host: localhost
      paths: /api/type_user*
      methods:
        - PUT
        - POST
        - PATCH
        - DELETE
        - GET

  # profile:
  #   host: localhost
  #   paths: /api/profile*
  #   methods:
  #     - PUT
  #     - POST
  #     - PATCH
  #     - DELETE
  #     - GET
  #   scopes:
  #     - 'admin'

  topup:
    host: localhost
    paths: /api/topup
    methods:
      - PUT
      - POST
      - PATCH
      - DELETE
      - GET
  voucher:
    host: localhost
    paths: /api/facial
serviceEndpoints:
  profile:
    url: 'http://localhost:5000'
  topup:
    url: 'http://localhost:3000'
  voucher:
    url: 'http://localhost:3001'
policies:
  - basic-auth
  - key-auth
  - log 
  - proxy
  - wallet
  - oauth2
  - bodyParser
  - request-transformer
pipelines:
  profile:
    apiEndpoints:
      - profile
    policies:
      # - bodyParser:
      #     - action:  # everything under the action will be actionParams
      #         baseUrl: 'https://example.com'
      # - log:
      #     - condition:
      #         name: expression
      #         expression: "req.body.start > 5"
      #     - action:
      #         message: '"Current user is approaching limits"'
      # - request-transformer:
      #     - action:
      #       body:
      #         add:
      #           authUser: req.egContext.authUser
      - key-auth:
          - action : 
              apiKeyHeader: Authorization
              disableHeadersScheme: false
      # - oauth2:
      - proxy:
          - action:
              serviceEndpoint: profile
              changeOrigin: true

      - bodyParser:
      
  voucher:
    apiEndpoints:
      - voucher
    policies:
      - oauth2:
      - proxy:
          - action:
              serviceEndpoint: voucher
              changeOrigin: true
  topup:
    apiEndpoints:
      - topup
    policies:
      - wallet:
          - action:
              amount: req.user
      - proxy:
          - action:
              serviceEndpoint: topup
              changeOrigin: true
  # get:
  #   apiEndpoints:
  #     - get
  #   policies:
  #     - oauth2:
  #     - proxy:
  #         - action:
  #             serviceEndpoint: get
  #             changeOrigin: true
    
# regist:
#     apiEndpoints:
#       - regist
#     policies:
#       - oauth2:
#       - proxy:
#         - action:
#             serviceEndpoint: profile
#             changeOrigin: true
