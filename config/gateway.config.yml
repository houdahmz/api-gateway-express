http:
  port: 8080
admin:
  port: 9876
  host: localhost
apiEndpoints:

  # regist:
  #   host: localhost
  #   paths: /api/profile/agent
  #   methods:
  #     - PUT
  #     - POST
  #     - PATCH
  #     - DELETE
  #     - GET
  #   scopes:
  #     - 'admin'
  # get:
  #   host: localhost
  #   paths: /api/profile/test
    # Only users with the 'admin' scope will be able to access
    # this endpoint
    # scopes:
    #   - 'admin'

  # profile:
    # - host: localhost
    #   paths: ['/api/profile', '/api/profile/:id']
    #   methods: ["GET"]

    # - host: localhost
    #   paths: ['/api/profile', '/api/profile/:id']
    #   methods: ["PATCH", "PUT", "POST", "DELETE"]

    # - host: localhost
    #   paths: ['/api/profile/agent']
    #   methods: ["POST"]
    #   scopes:
    #     - 'admin'

    # - host: localhost
    #   paths: /api/type_user*
    #   methods:
    #     - PUT
    #     - POST
    #     - PATCH
    #     - DELETE
    #     - GET

  profile:
    - host: localhost
      paths: /api/profile*
      methods:
        - PUT
        - POST
        - PATCH
        - DELETE
        - GET
      scopes:
        - 'admin'
      # scopes:
      #   - ['admin']

    - host: localhost
      paths: /api/image*

    - host: localhost
      paths: /api/activity*

    - host: localhost
      paths: /api/type-user*

    - host: localhost
      paths: /api/category*

    - host: localhost
      paths: /api/document*

    - host: localhost
      paths: /api/company*

    - host: localhost
      paths: /api/activity-company*

  topup:
    host: localhost
    paths: /api/facial
    methods:
      - POST


  voucher:
    - host: localhost
      paths: /api/facial*

    - host: localhost
      paths: /api/voucher*

    - host: localhost
      paths: /api/transaction*

    - host: localhost
      paths: /api/operator*

    - host: localhost
      paths: /api/document*

  # test:
  #   - host: localhost
  #     paths: /api/facial*

  paymee:
    - host: localhost
      paths: /api/cashin
      methods: ["POST"]

    - host: localhost
      paths:  ['/api/accountname/:id']
      methods: ["GET"]

    - host: localhost
      paths: /api/transactions

  wallet:
    - host: localhost
      paths: /api/wallet

serviceEndpoints:
  profile:
    url: 'http://localhost:5000'
  topup:
    url: 'http://localhost:3000'
  voucher:
    url: 'http://localhost:5001'
  paymee:
    url: 'http://localhost:5002'
  wallet:
    url: 'http://localhost:5003'
policies:
  - basic-auth
  - key-auth
  - log
  - proxy
  # - wallet
  - oauth2
  - request-transformer
pipelines:
  default:
    apiEndpoints:
      - profile
    policies:
      # - bodyParser:
      #     - action:  # everything under the action will be actionParams
      #         baseUrl: 'https://example.com'
      # - log:
      #     - condition:
      #         name: expression
      #         expression: "req.body.start > 5"
      #     - action:
      #         message: '"Current user is approaching limits"'
      # - request-transformer:
      #     - action:
      #       body:
      #         add:
      #           authUser: req.egContext.authUser
      # - key-auth:
      #     - action :
      #         apiKeyHeader: Authorization
      #         disableHeadersScheme: false
      # - oauth2:
      # - wallet:
      #     - action:
      #         amount: req.user
      - log:
          - action:
              message: "header===> ${req.headers.authorization}"
      - oauth2:
          - action:
              jwt:
                issuer: express-gateway
                audience: something
                subject: 3pXQjeklS3cFf8OCJw9B22
                secretOrPublicKey: 54v3WJGBcFPh3TFgZSzovw
                checkCredentialExistence: false
      - proxy:
          - action:
              serviceEndpoint: profile
              changeOrigin: true

      # - bodyParser:
  voucher:
    apiEndpoints:
      - voucher
    policies:
      # - oauth2:
      # - wallet:
      #     - action:
      #         amount: req.user
      - proxy:
          - action:
              serviceEndpoint: voucher
              changeOrigin: true
  topup:
    apiEndpoints:
      - topup
    policies:
      # - wallet:
      #     - action:
      #         amount: req.user
      - proxy:
          - action:
              serviceEndpoint: topup
              changeOrigin: true

  paymee:
    apiEndpoints:
      - paymee
    policies:
      - proxy:
          - action:
              serviceEndpoint: paymee
              changeOrigin: true


# this is with pass credentials
#       - oauth2:
#           - action:
#               jwt:
#                 issuer: express-gateway
#                 audience: something
#                 subject: test
#                 secretOrPublicKey: secret
#                 checkCredentialExistence: false