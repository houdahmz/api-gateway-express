http:
  port: ${HTTP_PORT:-8080}
  # host: https://refonte-api.khallasli.com
admin: 
  port: ${HTTP_PORT_ADMIN:-9876}
  host: localhost 

apiEndpoints:
  topup:
    - host: '*'
      paths: /topup/operator*
      methods: ["POST","PATCH","GET","PUT","DELETE"]
      scopes: ['admin']
    - host: '*'
      paths: /topup/simcard*
      methods: ["POST","PATCH","GET","PUT","DELETE"]
      scopes: ['admin'] 
    - host: '*'
      paths: /topup/serialeport*
      methods: ["POST","PATCH","GET","PUT"]
      scopes: ['admin']
      

  profile:
    - host: '*'
      paths: /admin/company*
      methods: ["POST","PATCH"]
      scopes: ['admin']

    - host: '*'
      paths: /admin/statsmobile
      methods: ["GET"]
      scopes: ['pos']

    - host: '*'
      paths: /user-management/wallet/extrait
      methods: ["GET"]
      scopes: ['pos']

    - host: '*'
      paths: /user-management/wallet/extrait/pdf
      methods: ["GET"]
      scopes: ['pos']

    - host: '*'
      paths: /wallet/history/pdf
      methods: ["GET"]
      scopes: ['pos']

    - host: '*'
      paths: /user-management/user/profile
      methods: ["GET"]
      scopes: ['pos']

    - host: '*'
      paths: /user-management/user/:id
      methods: ["GET"]
      scopes: ['admin']

    - host: '*'
      paths: /user-management/profile/export
      methods: ["GET"]
      scopes: ['admin']

    - host: '*'
      paths: /user-management/profile
      methods: ["GET"]
      scopes: ['admin']

    - host: '*'
      paths: /user-management/profile/by_userId/:id
      methods: ["GET"]
      scopes: ['pos']

    - host: '*'
      paths: /user-management/profile/:id
      methods: ["DELETE","GET"]
      scopes: ['admin']

    - host: '*'
      paths: /user-management/profile*
      methods: ["PUT","PATCH"]
      scopes: ['pos','admin',"visitor"]

    - host: '*'
      paths: /user-management/company/:id
      methods: ["PUT","PATCH"]
      scopes: ['pos','admin',"visitor"]

    - host: '*'
      paths: /user-management/company/profile-by-company
      methods: ["POST"]
      scopes: ['pos']

    - host: '*'
      paths: /user-management/company/import
      methods: ["POST"]
      scopes: ['admin']

    - host: '*'
      paths: /user-management/history/*
      methods: ["GET"]
      scopes: ['admin']

    - host: '*'
      paths: /user-management/image*
      methods: ["GET","POST","DELETE","PUT","PATCH"]
      scopes: ['admin']

    - host: '*'
      paths: /user-management/activity/:id
      methods: ["GET"]
      scopes: ['pos',"admin"]

    - host: '*'
      paths: /user-management/activity
      methods: ["POST","DELETE","PUT","PATCH"]
      scopes: ['admin']

    - host: '*'
      paths: /user-management/type-user/by_code/:id
      methods: ["GET"]
      scopes: ['admin']

    - host: '*'
      paths: /user-management/type-user
      methods: ["GET"]
      scopes: ['pos',"admin","visitor"]

    - host: '*'
      paths: /user-management/type-user/:id
      methods: ["GET"]
      scopes: ['pos',"admin"]

    - host: '*'
      paths: /user-management/type-user
      methods: ["POST","DELETE","PUT","PATCH"]
      scopes: ['admin']

    - host: '*'
      paths: /user-management/region
      methods: ["GET"]
      scopes: ['pos',"admin"]

    - host: '*'
      paths: /user-management/region/:id
      methods: ["GET"]
      scopes: ['pos',"admin"]

    - host: '*'
      paths: /user-management/region
      methods: ["POST","DELETE","PUT","PATCH"]
      scopes: ['admin']

    - host: '*'
      paths: /user-management/getUserByRegion
      methods: ["GET"]
      scopes: ["admin"]

    - host: '*'
      paths: /user-management/category*
      methods: ["GET","POST","DELETE","PUT","PATCH"]
      scopes: ['admin']

    - host: '*'
      paths: /user-management/document*
      methods: ["GET","POST","DELETE","PUT","PATCH"]
      scopes: ['admin']

    - host: '*'
      paths: /user-management/company*
      methods: ["GET","POST","DELETE","PUT","PATCH"]
      scopes: ['admin']

    - host: '*'
      paths: /user-management/activity-company*
      methods: ["GET","POST","DELETE","PUT","PATCH"]
      scopes: ['admin']

  voucher:


# valider les vouchers importer et modifier leurs status
    - host: '*'
      paths: /voucher/document
      methods: ["GET"]
      scopes: ['admin']

    - host: '*'
      paths: /voucher/document/:id
      methods: ["DELETE","GET","PUT"]
      scopes: ['admin']

    - host: '*'
      paths: '/voucher/transaction'
      methods: ["POST"]
      scopes: ['pos']

    - host: '*'
      paths: '/voucher/transaction'
      methods: ["GET"]
      scopes: ['admin']

    - host: '*'
      paths: '/voucher/transaction/by_user/:id'
      methods: ["GET"]
      scopes: ['pos']
# valider et refuser les commandes
    - host: '*'
      paths: '/voucher/transaction/status/:id'
      methods: ["PUT"]
      scopes: ['admin']

    - host: '*'
      paths: /voucher/facial
      methods: ["GET"]
      scopes: ['pos',"admin"]

    - host: '*'
      paths: /voucher/facial/:id
      methods: ["GET"]
      scopes: ['pos',"admin"]

    - host: '*'
      paths: /voucher/facial*
      methods: ["POST","DELETE","PUT","PATCH"]
      scopes: ['admin']

    # - host: '*'
    #   paths: /voucher/voucher*
    #   methods: ["POST"]
    #   scopes: ['admin']

    - host: '*'
      paths: /voucher/operator
      methods: ["GET"]
      scopes: ['pos',"admin"]

    - host: '*'
      paths: /voucher/operator/:id
      methods: ["GET"]
      scopes: ['pos',"admin"]

    - host: '*'
      paths: /voucher/operator*
      methods: ["POST","DELETE","PUT","PATCH"]
      scopes: ['admin']

    - host: '*'
      paths: /voucher/settings
      methods: ["GET"]
      scopes: ['pos',"admin"]

    - host: '*'
      paths: /voucher/settings/:id
      methods: ["GET"]
      scopes: ['pos',"admin"]

    - host: '*'
      paths: /voucher/settings*
      methods: ["POST","DELETE","PUT","PATCH"]
      scopes: ['admin']

    - host: '*'
      paths: /voucher/transactionByAdmin/:id
      methods: ["PUT"]
      scopes: ['admin']

    # - host: '*'
    #   paths: /voucher/document*
    #   methods: ["POST","DELETE","PUT","PATCH","GET"]
    #   scopes: ['admin']

    # - host: '*'
    #   paths: /voucher/transaction/
    #   methods: ["GET"]
    #   scopes: ['admin']

# add voucher 
    - host: '*'
      paths: /voucher
      methods: ["GET"]
      scopes: ['admin']

    - host: '*'
      paths: /voucher/ooredoo
      methods: ["POST"]
      scopes: ['admin']


    - host: '*'
      paths: /voucher/:id
      methods: ["GET","DELETE"]
      scopes: ['admin']

    - host: '*'
      paths: /voucher
      methods: ["POST"]
      scopes: ['admin']

  topupKh:

    - host: '*'
      paths: '/topUpKh/stats'
      methods: ["GET"]
      scopes: ['admin']

    - host: '*'
      paths: '/topUpKh/transaction'
      methods: ["POST"]
      scopes: ['pos']

    - host: '*'
      paths: '/topUpKh/transaction'
      methods: ["GET"]
      scopes: ['admin']

    - host: '*'
      paths: '/topUpKh/transaction/by_user'
      methods: ["GET"]
      scopes: ['pos']

    - host: '*'
      paths: /topUpKh/transaction/:id
      methods: ["GET","DELETE"]
      scopes: ['admin']
  
  open:

    - host: '*'
      paths: /user-management/activity
      methods: ["GET"]
      
    - host: '*'
      paths: /user-management/documents
      methods: ["GET"]

    - host: '*'
      paths: /home/contact
      methods: ["GET"]

    - host: '*'
      paths: /home/contact/:id
      methods: ["GET"]

    - host: '*'
      paths: /home/block
      methods: ["GET"]

    - host: '*'
      paths: /home/block/:id
      methods: ["GET"]

    - host: '*'
      paths: /home/header
      methods: ["GET"]

    - host: '*'
      paths: /home/header/:id
      methods: ["GET"]

    - host: '*'
      paths: /home/logo
      methods: ["GET"]

    - host: '*'
      paths: /home/logo/:id
      methods: ["GET"]

    - host: '*'
      paths: /home/regards
      methods: ["GET"]

    - host: '*'
      paths: /home/regards/:id
      methods: ["GET"]

    - host: '*'
      paths: /home/service
      methods: ["GET"]

    - host: '*'
      paths: /home/service/:id
      methods: ["GET"]

    - host: '*'
      paths: /home/contact
      methods: ["GET"]

    - host: '*'
      paths: /home/contact/:id
      methods: ["GET"]

    - host: '*'
      paths: /home/image
      methods: ["GET"]

    - host: '*'
      paths: /home/image/:id
      methods: ["GET"]

    - host: '*'
      paths: /home/partner
      methods: ["GET"]

    - host: '*'
      paths: /home/partner/:id
      methods: ["GET"]

    - host: '*'
      paths: /home/feature
      methods: ["GET"]

    - host: '*'
      paths: /home/feature/:id
      methods: ["GET"]

  home:

    - host: '*'
      paths: /home/contact_user
      methods: ["POST"]
      scopes: ['pos']

    - host: '*'
      paths: /home/contact_user*
      methods: ["GET","DELETE","PUT","PATCH"]
      scopes: ['admin']

    - host: '*'
      paths: /home/contact*
      methods: ["POST","DELETE","PUT","PATCH"]
      scopes: ['admin']
      
    - host: '*'
      paths: /home/block*
      methods: ["POST","DELETE","PUT","PATCH"]
      scopes: ['admin']

    - host: '*'
      paths: /home/header*
      methods: ["POST","DELETE","PUT","PATCH"]
      scopes: ['admin']

    - host: '*'
      paths: /home/logo*
      methods: ["POST","DELETE","PUT","PATCH"]
      scopes: ['admin']

    - host: '*'
      paths: /home/regard*
      methods: ["POST","DELETE","PUT","PATCH"]
      scopes: ['admin']

    - host: '*'
      paths: /home/partner*
      methods: ["POST","DELETE","PUT","PATCH"]
      scopes: ['admin']

    - host: '*'
      paths: /home/feature*
      methods: ["POST","DELETE","PUT","PATCH"]
      scopes: ['admin']

    - host: '*'
      paths: /home/image*
      methods: ["POST","DELETE","PUT","PATCH"]
      scopes: ['admin']

    - host: '*'
      paths: /home/serivce*
      methods: ["POST","DELETE","PUT","PATCH"]
      scopes: ['admin']

  paymee:
    - host: '*'
      paths: /paymee/cashin
      methods: ["POST"]
      scopes: ['pos']

    - host: '*'
      paths:  ['/paymee/accountname/:id']
      methods: ["GET"]
      scopes: ['pos']

    - host: '*'
      paths: /paymee/transactions
      scopes: ['pos']
  
  poste:

    - host: '*'
      paths: /poste/affiliation/:id
      methods: ["GET"]
      scopes: ['pos']

    - host: '*'
      paths: /poste/affiliation
      methods: ["POST"]
      scopes: ['pos']
    - host: '*'
      paths: /poste/affiliation-commercant
      methods: ["POST","GET"]
      scopes: ['admin']
    - host: '*'
      paths: /poste/bill-payment
      methods: ["POST"]
      scopes: ['pos']

    - host: '*'
      paths: /poste/recharge-card
      methods: ["POST"]
      scopes: ['pos']

    - host: '*'
      paths: /poste/balance
      methods: ["POST"]
      scopes: ['admin']

    - host: '*'
      paths: /poste/unsubscribe*
      methods: ["POST"]
      scopes: ['pos']
    - host: '*'
      paths: /poste/card*
      methods: ["GET","POST","DELETE","PUT","PATCH"]
      scopes: ['admin']
    - host: '*'
      paths: /poste/alimentation-pos*
      methods: ["POST"]
      scopes: ['admin']
    - host: '*'
      paths: /poste/collect-fond*
      methods: ["POST"]
      scopes: ['admin']
    - host: '*'
      paths: /poste/affiliation
      methods: ["GET"]
      scopes: ['admin']
    - host: '*'
      paths: /poste/affiliation/user*
      methods: ["GET"]
      scopes: ['pos']
    - host: '*'
      paths: /poste/recharge
      methods: ["GET"]
      scopes: ['admin']
    - host: '*'
      paths: /poste/recharge/user*
      methods: ["GET"]
      scopes: ['pos']
    - host: '*'
      paths: /poste/bill-payment
      methods: ["GET"]
      scopes: ['admin']  
    - host: '*'
      paths: /poste/bill-payment/user*
      methods: ["GET"]
      scopes: ['pos']  
    - host: '*'
      paths: /poste/transaction-transfer
      methods: ["GET"]
      scopes: ['admin'] 
  topnet:
    - host: '*'
      paths: /topnet/payment*
      methods: ["POST"]
      scopes: ['pos']

    - host: '*'
      paths:  /topnet/transaction/user*
      methods: ["GET"]
      scopes: ['pos']
    - host: '*'
      paths:  /topnet/transaction*
      methods: ["GET"]
      scopes: ['admin']
    - host: '*'
      paths: /topnet/bill*
      methods: ["GET"]
      scopes: ['pos']
  
  agent-register:
    - host: '*'
      paths: /api/agent-register/profile/agent
      methods: ["POST"]
      scopes: ['agent']
  wallet:
      
    - host: '*'
      paths: /wallet/supplier-service*
      methods: ["POST","DELETE","PUT","PATCH"]
      scopes: ['admin']

    - host: '*'
      paths: /wallet/supplier-service/:id
      methods: ["GET"]
      scopes: ['pos','admin']   

    - host: '*'
      paths: /wallet/supplier-service
      methods: ["GET"]
      scopes: ['admin','pos'] 

    - host: '*'
      paths: /wallet/supplier
      methods: ["POST"]
      scopes: ['admin']
    - host: '*'
      paths: /wallet/supplier
      methods: ["GET"]
      scopes: ['admin']
    - host: '*'
      paths: /wallet/supplier*
      methods: ["GET"]
      scopes: ['admin']   
    - host: '*'
      paths: /wallet/supplier*
      methods: ["PUT"]
      scopes: ['admin']
    - host: '*'
      paths: /wallet/supplier/*
      methods: ["PATCH"]
      scopes: ['pos'] 
    - host: '*'
      paths: /wallet/supplier/*
      methods: ["DELETE"]
      scopes: ['admin']                       
    - host: '*'
      paths: /wallet/supplier
      methods: ["POST"]
      scopes: ['admin']
    - host: '*'
      paths: /wallet/reimbursed
      methods: ["POST"]
      scopes: ['admin']
    - host: '*'
      paths: /wallet/reimbursed
      methods: ["GET"]
      scopes: ['admin']
    - host: '*'
      paths: /wallet/reimbursed*
      methods: ["GET"]
      scopes: ['admin']   
    - host: '*'
      paths: /wallet/reimbursed*
      methods: ["PUT"]
      scopes: ['admin']
    - host: '*'
      paths: /wallet/reimbursed/*
      methods: ["PATCH"]
      scopes: ['admin'] 
    - host: '*'
      paths: /wallet/reimbursed/*
      methods: ["DELETE"]
      scopes: ['admin']                       
    - host: '*'
      paths: /wallet/reimbursed
      methods: ["POST"]
      scopes: ['admin']  
    - host: '*'
      paths: /wallet/service
      methods: ["POST"]
      scopes: ['admin']
    - host: '*'
      paths: /wallet/service
      methods: ["GET"]
      scopes: ['admin']
    - host: '*'
      paths: /wallet/service*
      methods: ["GET"]
      scopes: ['admin']   
    - host: '*'
      paths: /wallet/service*
      methods: ["PUT"]
      scopes: ['admin']
    - host: '*'
      paths: /wallet/service/*
      methods: ["PATCH"]
      scopes: ['admin'] 
    - host: '*'
      paths: /wallet/service/*
      methods: ["DELETE"]
      scopes: ['admin']                       
    - host: '*'
      paths: /wallet/service
      methods: ["POST"]
      scopes: ['admin']    
    - host: '*'
      paths: /wallet/category
      methods: ["POST"]
      scopes: ['admin']
    - host: '*'
      paths: /wallet/category
      methods: ["GET"]
      scopes: ['admin']
    - host: '*'
      paths: /wallet/category*
      methods: ["GET"]
      scopes: ['admin']   
    - host: '*'
      paths: /wallet/category*
      methods: ["PUT"]
      scopes: ['admin']
    - host: '*'
      paths: /wallet/category/*
      methods: ["PATCH"]
      scopes: ['admin'] 
    - host: '*'
      paths: /wallet/category/*
      methods: ["DELETE"]
      scopes: ['admin']                       
    - host: '*'
      paths: /wallet/category  
    - host: '*'
      paths: /wallet/document
      methods: ["POST"]
      scopes: ['admin']
    - host: '*'
      paths: /wallet/document
      methods: ["GET"]
      scopes: ['admin']
    - host: '*'
      paths: /wallet/document*
      methods: ["GET"]
      scopes: ['admin']   
    - host: '*'
      paths: /wallet/document*
      methods: ["PUT"]
      scopes: ['admin']
    - host: '*'
      paths: /wallet/document/*
      methods: ["PATCH"]
      scopes: ['admin'] 
    - host: '*'
      paths: /wallet/document/*
      methods: ["DELETE"]
      scopes: ['admin']                       
    - host: '*'
      paths: /wallet/document     
    - host: '*'
      paths: /wallet/currency
      methods: ["POST"]
      scopes: ['admin']
    - host: '*'
      paths: /wallet/currency
      methods: ["GET"]
      scopes: ['admin']
    - host: '*'
      paths: /wallet/currency*
      methods: ["GET"]
      scopes: ['admin']   
    - host: '*'
      paths: /wallet/currency*
      methods: ["PUT"]
      scopes: ['admin']
    - host: '*'
      paths: /wallet/currency/*
      methods: ["PATCH"]
      scopes: ['admin'] 
    - host: '*'
      paths: /wallet/currency/*
      methods: ["DELETE"]
      scopes: ['admin']                       
    - host: '*'
      paths: /wallet/currency   
    - host: '*'
      paths: /wallet/feed
      methods: ["POST"]
      scopes: ['pos']
    - host: '*'
      paths: /wallet/feed/type
      methods: ["POST"]
      scopes: ['admin']
    - host: '*'
      paths: /wallet/feed
      methods: ["GET"]
      scopes: ['pos','admin']
    - host: '*'
      paths: /wallet/feed/type
      methods: ["GET"]
      scopes: ['pos','admin']   
    - host: '*'
      paths: /wallet/feed/type/*
      methods: ["GET"]
      scopes: ['pos','admin']  
    - host: '*'
      paths: /wallet/feed/type/*
      methods: ["PUT"]
      scopes: ['admin','pos']
    - host: '*'
      paths: /wallet/feed/type/*
      methods: ["PATCH"]
      scopes: ['admin'] 
    - host: '*'
      paths: /wallet/feed/type/*
      methods: ["DELETE"]
      scopes: ['admin']  
    - host: '*'
      paths: /wallet/feed*
      methods: ["GET"]
      scopes: ['pos','admin']
    - host: '*'
      paths: /wallet/feed*
      methods: ["PUT"]
      scopes: ['admin']
    - host: '*'
      paths: /wallet/feed/*
      methods: ["PATCH"]
      scopes: ['admin'] 
    - host: '*'
      paths: /wallet/feed/*
      methods: ["DELETE"]
      scopes: ['admin']                       
   
    - host: '*'
      paths: /wallet/intervenant/:id
      methods: ["GET","DELETE","PUT","PATCH"]
      scopes: ['admin']

    - host: '*'
      paths: /wallet/intervenant
      methods: ["GET"]
      scopes: ['admin']   

    - host: '*'
      paths: /wallet/intervenant
      methods: ["POST","DELETE","PUT","PATCH"]
      scopes: ['admin']

    - host: '*'
      paths: /wallet/commission
      methods: ["POST"]
      scopes: ['admin']
    - host: '*'
      paths: /wallet/commission
      methods: ["GET"]
      scopes: ['admin']
    - host: '*'
      paths: /wallet/commission*
      methods: ["GET"]
      scopes: ['admin']   
    - host: '*'
      paths: /wallet/commission*
      methods: ["PUT"]
      scopes: ['admin']
    - host: '*'
      paths: /wallet/commission/*
      methods: ["PATCH"]
      scopes: ['admin'] 
    - host: '*'
      paths: /wallet/commission/:id
      methods: ["DELETE"]
      scopes: ['admin']                       
    - host: '*'
      paths: /wallet/commission  
    - host: '*'
      paths: /wallet
      methods: ["GET"]
      scopes: ['admin','pos'] 
    - host: '*'
      paths: /wallet
      methods: ["POST"]
      scopes: ['admin']   
    - host: '*'
      paths: /wallet/:id
      methods: ["PUT","PATCH","DELETE"]
      scopes: ['admin']  
    - host: '*'
      paths: /wallet/:id
      methods: ["GET"]
      scopes: ['admin','pos']    
    - host: '*'
      paths: /wallet/history
      methods: ["GET"]
      scopes: ['admin','pos']       
                                  
  api:
    - host: '*'
      paths: ['/scopes*','/credentials*','/apps*','/api-endpoints*']
      methods: ["GET","POST","PUT","DELETE","PATCH",PUT]
      scopes: ['admin']

    - host: '*'
      paths: ['/users*']
      methods: ["POST","PUT","DELETE","PATCH",PUT]
      scopes: ['super_admin']

    - host: '*'
      paths: ['/users*']
      methods: ["GET"]
      scopes: ['admin']

serviceEndpoints:
  api_management:
    url: http://localhost:${HTTP_PORT_API_MANAGEMENT:-4000}/api-management
  backend:
    url: http://localhost:${HTTP_PORT_ADMIN:-9876}

policies:
  - basic-auth
  - key-auth
  - log
  - proxy
  - oauth2
  - jwt
  - request-transformer
  - validate-user
  - jwt-permissions
  - jwtScopes
  - agent-register
  - rewrite
  - middleware
  - tokenReg
  - login
  - response-transformer
  - cors

pipelines:
  # default:
  #   apiEndpoints:
  #     - profile
  #   policies:
  #     - log:
  #         - action:
  #             message: "profile eee header===> ${req.headers.authorization} ---${res.statusCode}-${req.method} ${req.originalUrl}  ${req.url}"
  #   # rewrite:
  #   #   -
  #   #     condition:
  #   #       name: pathmatch
  #   #       match: /:route*
  #   #     action:
  #   #       rewrite: /api_management/:route
  #     - log:
  #         - action:
  #             message: "eeerrr header===> ${req.headers.authorization} ---${res.statusCode}-${req.method} ${req.originalUrl}  ${req.url}"
  #     - oauth2:
  #         - action:
  #             jwt:
  #               issuer: express-gateway
  #               audience: something
  #               subject: 3pXQjeklS3cFf8OCJw9B22
  #               secretOrPublicKey: 54v3WJGBcFPh3TFgZSzovw
  #               checkCredentialExistence: false
  #     - validate-user:
  #     - request-transformer:
  #         action:
  #           body:
  #             add:
  #               user: req.user
  #     - log:
  #         - action:
  #             message: "aaaa ${res.statusCode}-${req.method} ${req.originalUrl}  ${req.url}"

  #     - proxy:
  #         - action:
  #             serviceEndpoint: api_management
  #             changeOrigin: true

  voucher:
    apiEndpoints:
      - voucher
    policies:
      - log:
          - action:
              message: "voucher header===> ${req.headers.authorization} ---${req.originalUrl}  ${req.url}"
      - cors:    
      - oauth2:
          - action:
              jwt:
                issuer: express-gateway
                audience: something
                subject: 3pXQjeklS3cFf8OCJw9B22
                secretOrPublicKey: 54v3WJGBcFPh3TFgZSzovw
                checkCredentialExistence: false
      - validate-user:
      # - request-transformer:
      #     action:
      #       body:
      #         add:
      #           user: req.user
      - middleware:
      - request-transformer:
        # - condition:
        #     name: method
        #     methods:
        #     - POST
      #   -   # array of Actions optionally gated by a condition
      #      condition: # this action is executed only if path is exactly /v1
      #        name: pathExact
      #        path: /v1
        # - condition:
        #   name: method
        #   methods:
        #     - GET
        # - condition:
        #     name: oneOf
        #     conditions:
        #         -
        #             name: pathExact
        #             path: /api/facial
        #         -
        #             name: not
        #             condition:
        #                 name: method
        #                 methods:
        #                     - GET
        #                     - HEAD 
        - action:
            body:
              add:
                user: req.user

      - log:
          - action:
              message: "${res.statusCode}-${req.method} ${req.originalUrl}  ${req.url}"
      - proxy:
          - action:
              serviceEndpoint: api_management
              changeOrigin: true

  # voucher:
  #   apiEndpoints:
  #   - voucher
  #   policies:
  #   - log:
  #     - action:
  #         message: voucher header===> ${req.headers.authorization} ---${req.originalUrl}  ${req.url}
  #   - cors:
  #   - oauth2:
  #     - action:
  #         jwt:
  #           issuer: express-gateway
  #           audience: something
  #           subject: 3pXQjeklS3cFf8OCJw9B22
  #           secretOrPublicKey: 54v3WJGBcFPh3TFgZSzovw
  #           checkCredentialExistence: false
  #   - validate-user:
  #   - request-transformer:
  #       action:
  #         body:
  #           add:
  #             user: req.user
  #   - middleware:
  #   - request-transformer:
  #     # - condition:
  #     #     name: method
  #     #     methods:
  #     #     - POST
  #     - action:
  #         body:
  #           add:
  #             user: req.user
  #   - log:
  #     - action:
  #         message: "${res.statusCode}-${req.method} ${req.originalUrl}  ${req.url}"
  #   - proxy:
  #     - action:
  #         serviceEndpoint: api_management
  #         changeOrigin: true
  topupKh:
    apiEndpoints:
      - topupKh
    policies:
      - log:
          - action:
              message: "topupKh header===> ${req.headers.authorization} ---${req}"
      - cors:
      - oauth2:
          - action:
              jwt:
                issuer: express-gateway
                audience: something
                subject: 3pXQjeklS3cFf8OCJw9B22
                secretOrPublicKey: 54v3WJGBcFPh3TFgZSzovw
                checkCredentialExistence: false
      - validate-user:
      - middleware:
      - request-transformer:
          action:
            body:
              add:
                user: req.user
      - log:
          - action:
              message: "${res.statusCode}-${req.method} ${req.originalUrl}  ${req.url}"
      - proxy:
          - action:
              serviceEndpoint: api_management
              changeOrigin: true

  profile:
    apiEndpoints:
      - profile
    policies:
      - log:
          - action:
              message: "profile header===> ${req.headers.authorization} ---${req}"
      - cors:
      - oauth2:
          - action:
              jwt:
                issuer: express-gateway
                audience: something
                subject: 3pXQjeklS3cFf8OCJw9B22
                secretOrPublicKey: 54v3WJGBcFPh3TFgZSzovw
                checkCredentialExistence: false
      - validate-user:
      - middleware:
      - request-transformer:
          action:
            body:
              add:
                user: req.user
      - log:
          - action:
              message: "${res.statusCode}-${req.method} ${req.originalUrl}  ${req.url}"
      - proxy:
          - action:
              serviceEndpoint: api_management
              changeOrigin: true

  topup:
    apiEndpoints:
      - topup
    policies:
      - log:
          - action:
              message: "topup header===> ${req.headers.authorization} ---${req.originalUrl}  ${req.url}"
      - cors:
      - oauth2:
          - action:
              jwt:
                issuer: express-gateway
                audience: something
                subject: 3pXQjeklS3cFf8OCJw9B22
                secretOrPublicKey: 54v3WJGBcFPh3TFgZSzovw
                checkCredentialExistence: false
      - validate-user:
      - request-transformer:
          action:
            body:
              add:
                user: req.user
      - log:
          - action:
              message: "${res.statusCode}-${req.method} ${req.originalUrl}  ${req.url}"

      - proxy:
          - action:
              serviceEndpoint: api_management
              changeOrigin: true

  paymee:
    apiEndpoints:
      - paymee
    policies:
      - log:
          - action:
              message: "paymee header===> ${req.headers.authorization} ---${req.originalUrl}  ${req.url}"
      - cors:
      - oauth2:
          - action:
              jwt:
                issuer: express-gateway
                audience: something
                subject: 3pXQjeklS3cFf8OCJw9B22
                secretOrPublicKey: 54v3WJGBcFPh3TFgZSzovw
                checkCredentialExistence: false
      - validate-user:
      - request-transformer:
          action:
            body:
              add:
                user: req.user
      - log:
          - action:
              message: "${res.statusCode}-${req.method} ${req.originalUrl}  ${req.url}"

      - proxy:
          - action:
              serviceEndpoint: api_management
              changeOrigin: true

  home:
    apiEndpoints:
      - home
    policies:
      - log:
          - action:
              message: "home header===> ${req.headers.authorization} ---${req.originalUrl}  ${req.url}"
      - cors:
      - oauth2:
          - action:
              jwt:
                issuer: express-gateway
                audience: something
                subject: 3pXQjeklS3cFf8OCJw9B22
                secretOrPublicKey: 54v3WJGBcFPh3TFgZSzovw
                checkCredentialExistence: false
      - validate-user:
      - middleware:
      - request-transformer:
          action:
            body:
              add:
                user: req.user
      - log:
          - action:
              message: "${res.statusCode}-${req.method} ${req.originalUrl}  ${req.url}"

      - proxy:
          - action:
              serviceEndpoint: api_management
              changeOrigin: true

  open:
    apiEndpoints:
      - open
    policies:
      - log:
          - action:
              message: "open header===> ${req.headers.authorization} ---${req.originalUrl}  ${req.url}"
      - cors:
      - log:
          - action:
              message: "${res.statusCode}-${req.method} ${req.originalUrl}  ${req.url}"

      - proxy:
          - action:
              serviceEndpoint: api_management
              changeOrigin: true
  adminAPI:
    apiEndpoints:
      - api
    policies:
      - log:
          - action:
              message: "api admin header===> ${req.headers.authorization} ${req.originalUrl}  ${req.url}"
      - cors:              
      - oauth2:
          - action:
              jwt:
                issuer: express-gateway
                audience: something
                subject: 3pXQjeklS3cFf8OCJw9B22
                secretOrPublicKey: 54v3WJGBcFPh3TFgZSzovw
                checkCredentialExistence: false
      - validate-user:
      - request-transformer:
          action:
            body:
              add:
                user: req.user
      - log:
          - action:
              message: "${res.statusCode}-${req.method} ${req.originalUrl}  ${req.url}"
      - proxy:
          - action:
              serviceEndpoint: backend
              changeOrigin: true

  poste:
    apiEndpoints:
      - poste
    policies:
      - log:
          - action:
              message: "header===> ${req.headers.authorization} ---${req}"
      - cors:
      - oauth2:
          - action:
              jwt:
                issuer: express-gateway
                audience: something
                subject: 3pXQjeklS3cFf8OCJw9B22
                secretOrPublicKey: 54v3WJGBcFPh3TFgZSzovw
                checkCredentialExistence: false
      - validate-user:
      - middleware:
      - request-transformer:
          action:
            body:
              add:
                user: req.user
      - log:
          - action:
              message: "${res.statusCode}-${req.method} ${req.originalUrl}  ${req.url}"
      - proxy:
          - action:
              serviceEndpoint: api_management
              changeOrigin: true

  topnet:
    apiEndpoints:
      - topnet
    policies:
      - log:
          - action:
              message: "topnet header===> ${req.headers.authorization} ---${req}"
      - cors:
      - oauth2:
          - action:
              jwt:
                issuer: express-gateway
                audience: something
                subject: 3pXQjeklS3cFf8OCJw9B22
                secretOrPublicKey: 54v3WJGBcFPh3TFgZSzovw
                checkCredentialExistence: false
      - validate-user:
      - middleware:
      - request-transformer:
          action:
            body:
              add:
                user: req.user
      - log:
          - action:
              message: "${res.statusCode}-${req.method} ${req.originalUrl}  ${req.url}"
      - proxy:
          - action:
              serviceEndpoint: api_management
              changeOrigin: true
  wallet:
    apiEndpoints:
      - wallet
    policies:
      - log:
          - action:
              message: "wallet header===> ${req.headers.authorization} ---${req}"
      - cors:
      - oauth2:
          - action:
              jwt:
                issuer: express-gateway
                audience: something
                subject: 3pXQjeklS3cFf8OCJw9B22
                secretOrPublicKey: 54v3WJGBcFPh3TFgZSzovw
                checkCredentialExistence: false
      - validate-user:
      - middleware:
      - request-transformer:
          action:
            body:
              add:
                user: req.user
      - log:
          - action:
              message: "${res.statusCode}-${req.method} ${req.originalUrl}  ${req.url}"
      - proxy:
          - action:
              serviceEndpoint: api_management
              changeOrigin: true



