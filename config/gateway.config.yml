http:
  port: 8080
admin:
  port: 9876
  host: localhost
apiEndpoints:
  
  profile:
    - host: localhost
      paths: /api/profile*
      methods:
        - PUT
        - POST
        - PATCH
        - DELETE
        - GET
    - host: localhost
      paths: /api/image*

    - host: localhost
      paths: /api/activity*

    - host: localhost
      paths: /api/type-user*

    - host: localhost
      paths: /api/category*
      
    - host: localhost
      paths: /api/document*

    - host: localhost
      paths: /api/company*
    
    - host: localhost
      paths: /api/activity-company*

  topup:
    host: localhost
    paths: /api/topup
    methods:
      - PUT
      - POST
      - PATCH
      - DELETE
      - GET
  voucher:
    - host: localhost
      paths: /api/facial*

    - host: localhost
      paths: /api/voucher*

    - host: localhost
      paths: /api/transaction*

    - host: localhost
      paths: /api/operator*

    - host: localhost
      paths: /api/document*

  paymee:
    - host: localhost
      paths: /api/cashin ['/api/profile', '/api/profile/:id']
      methods: ["POST"]

    - host: localhost
      paths:  ['/api/accountname/:id']
      methods: ["GET"]

    - host: localhost
      paths: /api/transactions

serviceEndpoints:
  profile:
    url: 'http://localhost:5000'
  topup:
    url: 'http://localhost:3000'
  voucher:
    url: 'http://localhost:5001'
  paymee:
    url: 'http://localhost:5002'
policies:
  - basic-auth
  - key-auth
  - log 
  - proxy
  # - wallet
  - oauth2
  # - bodyParser
  - request-transformer
pipelines:
  default:
    apiEndpoints:
      - profile
    policies:
      # - bodyParser:
      #     - action:  # everything under the action will be actionParams
      #         baseUrl: 'https://example.com'
      # - log:
      #     - condition:
      #         name: expression
      #         expression: "req.body.start > 5"
      #     - action:
      #         message: '"Current user is approaching limits"'
      # - request-transformer:
      #     - action:
      #       body:
      #         add:
      #           authUser: req.egContext.authUser
      # - key-auth:
      #     - action : 
      #         apiKeyHeader: Authorization
      #         disableHeadersScheme: false
      # - oauth2:
      - proxy:
          - action:
              serviceEndpoint: profile
              changeOrigin: true

      # - bodyParser:
  voucher:
    apiEndpoints:
      - voucher
    policies:
      # - oauth2:
      - proxy:
          - action:
              serviceEndpoint: voucher
              changeOrigin: true
  topup:
    apiEndpoints:
      - topup
    policies:
      # - wallet:
      #     - action:
      #         amount: req.user
      - proxy:
          - action:
              serviceEndpoint: topup
              changeOrigin: true

  paymee:
    apiEndpoints:
      - paymee
    policies:
      - proxy:
          - action:
              serviceEndpoint: paymee
              changeOrigin: true
