http:
  port: 8080
apiEndpoints:
  profile:
    - host: localhost
      paths: /api_management/user_management/profile*
      methods: ["GET","PUT","PATCH"]
      scopes: ['user']

    - host: localhost
      paths: /api_management/user_management/profile*
      methods: ["POST","DELETE"]
      scopes: ['admin']

    - host: localhost
      paths: /api_management/user_management/profile/agent
      methods: ["GET"]
      scopes: ['user']

    - host: localhost
      paths: /api_management/user_management/image*
      scopes: ['admin']

    - host: localhost
      paths: /api_management/user_management/activity*
      scopes: ['admin']

    - host: localhost
      paths: /api_management/user_management/type-user*
      scopes: ['admin']

    - host: localhost
      paths: /api_management/user_management/category*
      scopes: ['admin']

    - host: localhost
      paths: /api_management/user_management/document*

    - host: localhost
      paths: /api_management/user_management/company*
      scopes: ['admin']

    - host: localhost
      paths: /api_management/user_management/activity-company*
      scopes: ['admin']

    - host: localhost
      paths: /api_management/user_management/profile
      scopes: ['user']

    - host: localhost
      paths: /api_management/user_management/profile/agent
      methods: ["POST"]
      scopes: ['admin']

  topup:
    host: localhost
    paths: /api/facial
    methods:
      - POST

  voucher:
    - host: localhost
      paths: /api_management/voucher/facial*
      methods: ["POST"]
      scopes: ['admin']

    - host: localhost
      paths: /api_management/voucher/voucher*
      methods: ["POST"]
      scopes: ['admin']

    - host: localhost
      paths: /api_management/voucher/transaction/
      methods: ["GET"]
      scopes: ['admin']

    - host: localhost
      paths: /api_management/voucher/operator*
      methods: ["POST"]
      scopes: ['admin']

    - host: localhost
      paths: /api_management/voucher/document
      methods: ["POST"]
      scopes: ['admin']

    - host: localhost
      paths: /api_management/voucher/transaction/
      methods: ["POST"]
      scopes: ['user']

  paymee:
    - host: localhost
      paths: /api_management/paymee/cashin
      methods: ["POST"]
      scopes: ['user']

    - host: localhost
      paths:  ['/api_management/paymee/accountname/:id']
      methods: ["GET"]
      scopes: ['user']

    - host: localhost
      paths: /api_management/paymee/transactions
      scopes: ['admin']

  agent-register:
    - host: localhost
      paths: /api/agent-register/profile/agent
      methods: ["POST"]
      scopes: ['agent']

serviceEndpoints:
  api_management:
    url: 'http://localhost:3000'
  backend:
    url: 'http://localhost:9876' 

policies:
  - basic-auth
  - key-auth
  - log
  - proxy
  - oauth2
  - jwt
  - request-transformer
  - validate-user
  - jwt-permissions
  - jwtScopes
  - agent-register
  - rewrite
  - tokenReg
  - login
  - response-transformer

pipelines:
  default:
    apiEndpoints:
      - profile
    policies:
      - log:
          - action:
              message: "header===> ${req.headers.authorization} ---${req}"
      - oauth2:
          - action:
              jwt:
                issuer: express-gateway
                audience: something
                subject: 3pXQjeklS3cFf8OCJw9B22
                secretOrPublicKey: 54v3WJGBcFPh3TFgZSzovw
                checkCredentialExistence: false
      - validate-user:
      - request-transformer:
          action:
            body:
              add:
                user: req.user
      - log:
          - action:
              message: "iciiiiiiii ===> --${res.statusCode}-${req.method} ${req.originalUrl}  ${req.url}"
      - proxy:
          - action:
              serviceEndpoint: profile
              changeOrigin: true

  voucher:
    apiEndpoints:
      - voucher
    policies:
      - log:
          - action:
              message: "header===> ${req.headers.authorization} ---${req}"
      - oauth2:
          - action:
              jwt:
                issuer: express-gateway
                audience: something
                subject: 3pXQjeklS3cFf8OCJw9B22
                secretOrPublicKey: 54v3WJGBcFPh3TFgZSzovw
                checkCredentialExistence: false
      - validate-user:
      - request-transformer:
          action:
            body:
              add:
                user: req.user
      - log:
          - action:
              message: "iciiiiiiii ===> ----"
      - proxy:
          - action:
              serviceEndpoint: api_management
              changeOrigin: true
  topup:
    apiEndpoints:
      - topup
    policies:
      # - wallet:
      #     - action:
      #         amount: req.user
      - proxy:
          - action:
              serviceEndpoint: topup
              changeOrigin: true

  profile:
    apiEndpoints:
      - profile
    policies:
      - log:
          - action:
              message: "header===> ${req.headers.authorization} ---${req}"
      - oauth2:
          - action:
              jwt:
                issuer: express-gateway
                audience: something
                subject: 3pXQjeklS3cFf8OCJw9B22
                secretOrPublicKey: 54v3WJGBcFPh3TFgZSzovw
                checkCredentialExistence: false
      - validate-user:
      - request-transformer:
          action:
            body:
              add:
                user: req.user
      - log:
          - action:
              message: "iciiiiiiii ===> ----"

      - proxy:
          - action:
              serviceEndpoint: api_management
              changeOrigin: true

  paymee:
    apiEndpoints:
      - paymee
    policies:
      - log:
          - action:
              message: "header===> ${req.headers.authorization} ---${req}"
      - oauth2:
          - action:
              jwt:
                issuer: express-gateway
                audience: something
                subject: 3pXQjeklS3cFf8OCJw9B22
                secretOrPublicKey: 54v3WJGBcFPh3TFgZSzovw
                checkCredentialExistence: false
      - validate-user:
      - request-transformer:
          action:
            body:
              add:
                user: req.user
      - log:
          - action:
              message: "iciiiiiiii ===> ----"

      - proxy:
          - action:
              serviceEndpoint: api_management
              changeOrigin: true

  adminAPI:
    apiEndpoints:
      - api
    policies:
      - proxy:
          - action:
              serviceEndpoint: backend
              changeOrigin: true

